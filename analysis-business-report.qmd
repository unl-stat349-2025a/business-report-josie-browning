---
title: "analysis"
---

```{r, setup, message=FALSE, warning=FALSE}
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
```

NAICS codes listed associated with "office" jobs:

-   Information (NAICS 511, 517, 518, 519)

-   Finance and Insurance (NAICS 521, 522, 523, 524)

-   Real Estate, Rental, and Leasing (NAICS 531, 532)

-   Professional, Scientific, and Technical Services (NAICS 541)

-   Management of Companies and Enterprises (NAICS 551)

-   Administrative and Support Services (NAICS 561)

```{r data, warning=FALSE}
injuries <- read_excel("~/Downloads/table-1-injury-and-illness-rates-by-industry-2023-national.xlsx")

injuries <- injuries %>%
  rename(NAICS = 'NAICS code(3)',
         total_cases = 'Total recordable cases',
         total_w_days = `Cases with days away from work`) %>%
  mutate(total_cases = as.numeric(total_cases),
         total_w_days = as.numeric(total_w_days),
         across(everything(), ~ ifelse(is.na(.), 0, .))) %>%
  filter(nchar(NAICS) == 3)

office_codes <- c("^511", "^517", "^518", "^519", "^521", "^522", "^523", "^524", "^531", "^532", "^541", "^551")
  
office_jobs <- injuries %>%
  filter(grepl(paste(office_codes, collapse='|'), NAICS))

non_office_jobs <- injuries %>%
  filter(!grepl(paste(office_codes, collapse='|'), NAICS))
```

Creating a graph by creating a data frame with the total recordable cases between office and non-office fields

```{r, dependson='data', cache=FALSE, warning=FALSE}
office_summary <- office_jobs %>%
  summarize(avg_cases = mean(total_cases)) %>%
  mutate(category = "Office Jobs")

non_office_summary <- non_office_jobs %>%
  summarize(avg_cases = mean(total_cases)) %>%
  mutate(category = "Non-Office Jobs")

injury_summary <- bind_rows(office_summary, non_office_summary) 

ggplot(injury_summary, aes(x = category, y = avg_cases, fill = category)) +
  geom_bar(stat = "identity") +
  labs(title = "Comparison of Average Recordable Injury Cases",
       x = "Job Type",
       y = "Average Cases") +
  scale_fill_manual(
    name = "Industry Category",
    values = c("Office Jobs" = "#8DA0CB", "Non-Office Jobs" = "#FC8D62"))
```

t-test between mean office and non office injuries

```{r}
boxplot(office_jobs$total_cases, non_office_jobs$total_cases)
#looks like the variances might be unequal, use Welch's test 

t.test(office_jobs$total_cases, non_office_jobs$total_cases, var.equal=FALSE)
#p-value is very small, we have enough evidence to say the mean injuries are different

```

I would like to compare the severity of injuries using this data too, so I'll compare the average number of cases with days away from work

```{r}
office_w_days_summary <- office_jobs %>%
  summarize(avg_cases = mean(total_w_days)) %>%
  mutate(category = "Office Jobs")

non_office_w_days_summary <- non_office_jobs %>%
  summarize(avg_cases = mean(total_w_days)) %>%
  mutate(category = "Non-Office Jobs")

injury_w_days_summary <- bind_rows(office_w_days_summary, non_office_w_days_summary)

ggplot(injury_w_days_summary, aes(x = category, y = avg_cases, fill = category)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Number of Injuries Resulting in Days Away From Work",
       x = "Job Type",
       y = "Average Cases") +
  scale_fill_discrete(name = "Industry Category")

#T-test

boxplot(office_jobs$total_w_days, non_office_jobs$total_w_days)
#looks like the variances might be unequal, use Welch's test 

t.test(office_jobs$total_w_days, non_office_jobs$total_w_days, var.equal=FALSE)
#p-value is very small, we have enough evidence to say the mean injuries that require days away from work are different
```

I would like to compare the number of falls between office industries and non-office industries

```{r, message=FALSE}
cases <- read_excel("~/Downloads/case-and-demographic-characteristics-table-r4-2021-2022.xlsx")

cases <- cases %>%
  rename(NAICS = 'NAICS code(2)') %>%
  filter(nchar(NAICS) == 3) %>% 
  mutate(across(everything(), ~ifelse(. == "-", "0", .))) %>%
  filter(duplicated(NAICS) == FALSE)

fall_cases <- cases %>%
  select(`Industry(1)`, NAICS, `Total cases`, `Fall on same level`, `Slips, trips without fall`)
  
office_jobs <- fall_cases %>%
  filter(grepl(paste(office_codes, collapse='|'), NAICS))
  
non_office_jobs <- fall_cases %>%
  filter(!grepl(paste(office_codes, collapse='|'), NAICS))
```

for histogram

```{r}
office_jobs <- office_jobs %>%
  mutate(total_cases = as.numeric(`Total cases`),
            total_falls = as.numeric(`Fall on same level`),
            total_slips = as.numeric(`Slips, trips without fall`))

office_summary <- office_jobs %>%
  summarise(mean_cases = mean(total_cases),
            mean_falls = mean(total_falls),
            mean_slips = mean(total_slips)) %>%
  mutate(category = "Office") %>%
  rename("Mean Falls" = mean_falls, "Mean Slips" = mean_slips)


non_office_jobs <- non_office_jobs %>%
  mutate(total_cases = as.numeric(`Total cases`),
          total_falls = as.numeric(`Fall on same level`),
          total_slips = as.numeric(`Slips, trips without fall`))

non_office_summary <- non_office_jobs %>%
  summarise(mean_cases = mean(total_cases),
            mean_falls = mean(total_falls),
            mean_slips = mean(total_slips)) %>%
  mutate(category = "Non-Office") %>%
  rename("Mean Falls" = mean_falls, "Mean Slips" = mean_slips)

cases_summary <- bind_rows(office_summary, non_office_summary)

cases_summary_long <- cases_summary %>%
  pivot_longer(cols = c('Mean Falls', 'Mean Slips'), 
               names_to = "type", 
               values_to = "mean_value")

ggplot(cases_summary_long, aes(x = category, y = mean_value, fill = type)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Comparison of Mean Falls and Mean Slips: Office vs Non-Office Jobs",
       x = "Job Category", 
       y = "Mean Value", 
       fill = "Injury Type") +
  scale_fill_manual(values = c("Mean Falls" = "#EE6982", 
                               "Mean Slips" = "#7C72B0"))

#t test
boxplot(office_jobs$total_falls, non_office_jobs$total_falls)

t.test(office_jobs$total_falls, non_office_jobs$total_falls, var.equal=FALSE)
t.test(office_jobs$total_slips, non_office_jobs$total_slips, var.equal=FALSE)

```

for barchart

```{r, warning=FALSE}
type_cases <- cases %>%
  select(-`Industry(1)`, -`Case type(3)`, -`Total cases`, -`Total...5`, -`Total...9`, -`Total...13`, -`Total...16`, -`Total...18`)

office_jobs <- type_cases %>%
  filter(grepl(paste(office_codes, collapse='|'), NAICS)) %>%
  mutate_all(as.numeric) %>%
  select(-`NAICS`)

type_totals_5 <- office_jobs %>%
  summarise(across(everything(), sum, na.rm = TRUE)) %>%
  pivot_longer(cols = everything(), names_to = "Category", values_to = "Total") %>%
  slice_max(order_by = Total, n = 5) %>%
  mutate(Category = str_wrap(Category, width = 15))

# Plot the bar chart
ggplot(type_totals_5, aes(x = reorder(Category, -Total), y = Total, fill = Category)) +
  geom_bar(stat = "identity") +
  labs(title = "Top 5 Most Common Office Injuries",
       x = "Category",
       y = "Total Cases") +
  guides(fill = FALSE)

total <- office_jobs %>%
  summarise(across(everything(), sum, na.rm = TRUE)) %>%
  pivot_longer(cols = everything(), names_to = "Category", values_to = "Total")

sum(total$Total)
18550/104470

```
